name: ci-cd

on:
  push:
    branches: [development]
  pull_request:
    branches: [development]

jobs:
  deployment_ios:
    runs-on: macos-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Prepare Yarn 4.5.0
        run: corepack prepare yarn@4.5.0 --activate
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.8'
          bundler-cache: true

      - name: Install Ruby Dependencies
        run: |
          cd ios
          rm Gemfile.lock
          bundle install
          bundle update fastlane

      - name: Use correct Yarn version
        run: corepack prepare yarn@4.5.0 --activate
      - name: Install packages
        run: yarn install

      - name: Create env.json
        run: echo {'"BASE_URL"':'"${{ secrets.BASE_URL }}"', '"SCAN_DATA_URL"':'"${{ secrets.SCAN_DATA_URL }}"', '"APPLE_ACCOUNT"':'"${{ secrets.APPLE_ACCOUNT }}"', '"ITC_TEAM_ID"':'"${{ secrets.ITC_TEAM_ID }}"', '"TEAM_ID"':'"${{ secrets.TEAM_ID }}"'} >> env.json

      - name: Create ios/fastlane/AppStoreConnectAPIKey.json
        run: |
          cd ios/fastlane
          echo '"key_id"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}"' >> AppStoreConnectAPIKey.json 
          echo '"issuer_id"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}"' >> AppStoreConnectAPIKey.json
          echo '"key"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}"' >> AppStoreConnectAPIKey.json

      - name: Deploy beta to App Store
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION  }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY  }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD  }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME  }}
          GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          MATCH_READONLY: true
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<<"${MATCH_DEPLOY_KEY}"
          cd ios
          pod install
          bundle exec fastlane beta --verbose

  deployment_android:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Prepare Yarn 4.5.0
        run: corepack prepare yarn@4.5.0 --activate
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Build install
        run: cd android && bundle install && bundle update fastlane

      - name: Use correct Yarn version
        run: corepack prepare yarn@4.5.0 --activate
      - name: Install packages
        run: yarn install

      - name: Decrypt keystore
        run: |
          cd android/app
          echo ${{ secrets.KEYSTORE_BASE_64 }} | base64 --decode > face-the-facts.keystore

      - name: Decrypt service-account
        run: |
          cd android
          echo ${{ secrets.SERVICE_ACCOUNT_JSON }} | base64 --decode > service-account.json

      - name: Create android/key.properties
        run: |
          cd android
          echo "storeFile=${{ secrets.KEYSTORE_FILE }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties

      - name: Create data.json mock
        run: echo "[]" >> data.json

      - name: Create env.json
        run: echo '{"BASE_URL":"${{ secrets.BASE_URL }}", "SCAN_DATA_URL":"${{ secrets.SCAN_DATA_URL }}"}' >> env.json

      - name: Deploy alpha to Google Playstore
        run: |
          cd android
          bundle exec fastlane alpha
