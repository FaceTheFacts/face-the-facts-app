name: ci-cd

on:
  push:
    branches: [development]
  pull_request:
    branches: [development]

jobs:
  deployment_ios:
    runs-on: macos-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6.8'
          bundler-cache: true

      - name: Install Ruby Dependencies
        run: cd ios && bundle install

      - name: Install packages
        run: yarn install

      - name: Create env.json
        run: echo {'"BASE_URL"':'"${{ secrets.BASE_URL }}"', '"SENTRY_DSN"':'"${{ secrets.SENTRY_DSN }}"', '"SCAN_DATA_URL"':'"${{ secrets.SCAN_DATA_URL }}"', '"APPLE_ACCOUNT"':'"${{ secrets.APPLE_ACCOUNT }}"', '"ITC_TEAM_ID"':'"${{ secrets.ITC_TEAM_ID }}"', '"TEAM_ID"':'"${{ secrets.TEAM_ID }}"'} >> env.json

      - name: Create ios/sentry.properties
        run: |
          cd ios
          echo "defaults.url=${{ secrets.SENTRY_URL }}" >> sentry.properties
          echo "defaults.org=${{ secrets.SENTRY_ORG }}" >> sentry.properties
          echo "defaults.project=${{ secrets.SENTRY_PROJ }}" >> sentry.properties
          echo "auth.token=${{ secrets.SENTRY_TOKEN }}" >> sentry.properties

      - name: Create ios/fastlane/.env.default
        run: |
          cd ios/fastlane
          echo {APP_STORE_CONNECT_API_KEY_KEY_ID='"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}"'} >> .env.default
          echo {APP_STORE_CONNECT_API_KEY_ISSUER_ID='"${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}"'} >> .env.default
          echo {APP_STORE_CONNECT_API_KEY_KEY='"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}"'} >> .env.default
          echo {MATCH_DEPLOY_KEY='"${{ secrets.MATCH_DEPLOY_KEY }}"'} >> .env.default
          echo {MATCH_GITHUB_API_TOKEN='"${{ secrets.MATCH_GITHUB_API_TOKEN }}"'} >> .env.default

      - name: Create ios/fastlane/AppStoreConnectAPIKey.json
        run: |
          cd ios/fastlane
          echo {'"key_id"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}"'} >> AppStoreConnectAPIKey.json 
          echo {'"issuer_id"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}"'} >> AppStoreConnectAPIKey.json
          echo {'"key"':'"${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}"'} >> AppStoreConnectAPIKey.json

      - name: Deploy beta to App Store
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION  }}
          MATCH_DEPLOY_KEY: ${{ secrets.MATCH_DEPLOY_KEY  }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD  }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME  }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID  }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID  }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY  }}
          GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
          MATCH_READONLY: true
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<<"${MATCH_DEPLOY_KEY}"
          cd ios
          pod install
          bundle exec fastlane beta --verbose

  deployment_android:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Build install
        run: cd android && bundle install

      - name: Install packages
        run: yarn install

      - name: Decrypt keystore
        run: |
          cd android/app
          echo ${{ secrets.KEYSTORE_BASE_64 }} | base64 --decode > face-the-facts.keystore

      - name: Decrypt service-account
        run: |
          cd android
          echo ${{ secrets.SERVICE_ACCOUNT_JSON }} | base64 --decode > service-account.json

      - name: Create android/gradle.properties
        run: |
          cd android
          echo "storeFile=${{ secrets.KEYSTORE_FILE }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties

      - name: Create android/sentry.properties
        run: |
          cd android
          echo "defaults.url=${{ secrets.SENTRY_URL }}" >> sentry.properties
          echo "defaults.org=${{ secrets.SENTRY_ORG }}" >> sentry.properties
          echo "defaults.project=${{ secrets.SENTRY_PROJ }}" >> sentry.properties
          echo "auth.token=${{ secrets.SENTRY_TOKEN }}" >> sentry.properties

      - name: Create data.json mock
        run: echo "[]" >> data.json

      - name: Create env.json
        run: echo {'"BASE_URL"':'"${{ secrets.BASE_URL }}"', '"SENTRY_DSN"':'"${{ secrets.SENTRY_DSN }}"', '"SCAN_DATA_URL"':'"${{ secrets.SCAN_DATA_URL }}"', '"APPLE_ACCOUNT"':'"${{ secrets.APPLE_ACCOUNT }}"', '"ITC_TEAM_ID"':'"${{ secrets.ITC_TEAM_ID }}"', '"TEAM_ID"':'"${{ secrets.TEAM_ID }}"'} >> env.json

      - name: Deploy alpha to Google Playstore
        run: |
          cd android
          bundle exec fastlane alpha --verbose
